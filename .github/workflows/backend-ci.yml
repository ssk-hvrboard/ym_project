name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run backend tests (if available)
      working-directory: ./backend
      run: |
        if npm run test; then
          echo "Tests passed"
        else
          echo "No test script found, skipping tests"
        fi
      continue-on-error: true

    - name: Build backend Docker image
      working-directory: ./backend
      run: docker build -t cavaliere-backend:test .

    - name: Test backend Docker image
      run: |
        docker run --rm --name test-backend -d -p 5000:5000 cavaliere-backend:test
        sleep 10
        curl -f http://localhost:5000/api/health || echo "Health check failed"
        docker stop test-backend
      continue-on-error: true

  frontend-ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend-react
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend-react
      run: npm run build

    - name: Build frontend Docker image
      working-directory: ./frontend-react
      run: docker build -t cavaliere-frontend:test .

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: [test-and-build, frontend-ci]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test docker-compose
      run: |
        docker-compose -f docker-compose.yml config
        echo "Docker Compose configuration is valid"

    - name: Build and test full stack
      run: |
        docker-compose up --build -d
        sleep 30
        curl -f http://localhost:3000 || echo "Frontend not ready"
        curl -f http://localhost:5000/api/health || echo "Backend not ready"
        docker-compose down
      continue-on-error: true 